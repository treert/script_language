每天花1或2小时在这上面。一般在晚上8点左右。

2015-11-08 加入tolua的源码，建vs工程编译通过
2015-11-09 换tolua++的源码，换lua源代码到5.1.5版本，编译通过。vs项目全部在同步盘里。
2015-11-10 将工程加入oschina的git中管理
2015-11-11[补] 看了下mathlib，先去把lua的stack和相关操作api给理清。
2015-11-12[补] 加班没时间
2015-11-13[补] 懒o(︶︿︶)o 唉
2015-11-14 对照源码、云风的read_lua开始学习，先从外围库开始
2015-11-15 strlib.c 有些看不想去，应该要把lauxlib.c和lua的栈和value搞清楚先。
2015-11-16 云风的readlua版本看不下去唉。将lua_longjmp接口TValue结构看了下。对战还是没开始看。
2015-11-17 看了下几个栈操作的函数。需要理清栈结构，现在不明白L->top和L->ci->top的关系。
2015-11-18 L->ci的定义还没看到，猜测每个callInfo生成一个栈，L->top的指针也是指向这个当前运行栈的。
2015-11-19[补] 超时了，晚上3点才睡。lua的栈理清，关键小函数index2adr和checkstacksize，callinfo也了解了个大概。
2015-11-20 昨天超时，今天休息。
2015-11-21 Proto结构没看，把lua.h、api.c、api.h浏览了下，这几个是给外部使用的全部函数定义的位置了。
2015-11-22 看完object和state，明天看下string和tm。现在的水平写不出lua这样的脚本语言吧，阅读都吃力。
2015-11-23 tm和string看完，比较简单；明天看table。tm定义一些元表系统属性，string是个字符串hash缓存。
2015-11-24 table部分看完，有两个疑惑：1.luaC_barriert不知道具体意思；2.感觉computesizes有漏洞，没看到把hash表里的转移到数组里。明天试试有没有问题。
2015-11-24【晚】 computesizes没有漏洞，它保持数组部分利用率至少50%。